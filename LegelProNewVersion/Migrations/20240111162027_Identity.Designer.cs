// <auto-generated />
using System;
using LegelProNewVersion.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LegelProNewVersion.Migrations
{
    [DbContext(typeof(LegelProNewVersionDbContext))]
    [Migration("20240111162027_Identity")]
    partial class Identity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_AdvancedSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("CheckedData")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("tbl_AdvancedSetting", "System");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CheckedData = false
                        });
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_ApproveStatus", b =>
                {
                    b.Property<int>("ApproveStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApproveStatusId"));

                    b.Property<string>("ApproveArabicName")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<int>("ApproveBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApproveEnglishName")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<int>("CreationBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("IsDeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastUpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ApproveStatusId");

                    b.ToTable("tbl_ApproveStatus", "Security");

                    b.HasData(
                        new
                        {
                            ApproveStatusId = 1,
                            ApproveArabicName = "قيد الإنتظار",
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ApproveEnglishName = "Pending",
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ApproveStatusId = 2,
                            ApproveArabicName = "موافقة",
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ApproveEnglishName = "Approve",
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ApproveStatusId = 3,
                            ApproveArabicName = "رفض",
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ApproveEnglishName = "Denial",
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_Areas", b =>
                {
                    b.Property<int>("AreaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AreaId"));

                    b.Property<int>("ApproveBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApproveStatusId")
                        .HasColumnType("int");

                    b.Property<string>("AreaArabicName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AreaEnglishName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CreationBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("IsDeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastUpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AreaId");

                    b.HasIndex("ApproveStatusId");

                    b.ToTable("tbl_Areas", "MainDetails");

                    b.HasData(
                        new
                        {
                            AreaId = 1,
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ApproveStatusId = 2,
                            AreaArabicName = "المنطقة",
                            AreaEnglishName = "Area",
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_Bank", b =>
                {
                    b.Property<int>("BankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BankId"));

                    b.Property<int>("ApproveBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CreationBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("IsDeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastUpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BankId");

                    b.ToTable("tbl_Bank", "MainDetails");

                    b.HasData(
                        new
                        {
                            BankId = 1,
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BankName = "البنك العربي الافريقي",
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_Branch", b =>
                {
                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BranchId"));

                    b.Property<int>("ApproveBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApproveStatusId")
                        .HasColumnType("int");

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<string>("BranchArabicName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BranchEnglishName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CreationBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("IsDeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastUpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BranchId");

                    b.HasIndex("ApproveStatusId");

                    b.HasIndex("AreaId");

                    b.ToTable("tbl_Branch", "MainDetails");

                    b.HasData(
                        new
                        {
                            BranchId = 1,
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ApproveStatusId = 2,
                            AreaId = 1,
                            BranchArabicName = "الفرع الرئيسي",
                            BranchEnglishName = "Main Branch",
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("BankId")
                        .HasColumnType("int");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdentificationNumber")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Keywords")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NationalNumber")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("TheDeviceName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ClientId");

                    b.HasIndex("BankId");

                    b.HasIndex("BranchId");

                    b.ToTable("tbl_Client", "MainDetails");
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<int>("ApproveBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApproveStatusId")
                        .HasColumnType("int");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("CreationBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentArabicName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DepartmentEnglishName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("IsDeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsSupDepartment")
                        .HasColumnType("bit");

                    b.Property<int?>("LastUpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DepartmentId");

                    b.HasIndex("ApproveStatusId");

                    b.HasIndex("BranchId");

                    b.ToTable("tbl_Department", "MainDetails");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ApproveStatusId = 2,
                            BranchId = 1,
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentArabicName = "شركة EHM",
                            DepartmentEnglishName = "EHM",
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsSupDepartment = false
                        },
                        new
                        {
                            DepartmentId = 2,
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ApproveStatusId = 2,
                            BranchId = 1,
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentArabicName = "الدعم الفني للنظام",
                            DepartmentEnglishName = "System Technical Support",
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsSupDepartment = true
                        });
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ApproveBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApproveStatusId")
                        .HasColumnType("int");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("CreationBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeArabicName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeEnglishName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("IsDeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastUpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("SubDepartmentId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("TypeOfJobId")
                        .HasColumnType("int");

                    b.Property<int>("tbl_JobId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("ApproveStatusId");

                    b.HasIndex("BranchId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("SubDepartmentId");

                    b.HasIndex("TypeOfJobId");

                    b.HasIndex("tbl_JobId");

                    b.ToTable("tbl_Employee", "Security");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Address = "",
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ApproveStatusId = 2,
                            BranchId = 1,
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            EmployeeArabicName = "شركة EHM",
                            EmployeeEnglishName = "EHM",
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhoneNumber = "",
                            SubDepartmentId = 1,
                            TypeOfJobId = 1,
                            tbl_JobId = 1
                        },
                        new
                        {
                            EmployeeId = 2,
                            Address = "",
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ApproveStatusId = 2,
                            BranchId = 1,
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            EmployeeArabicName = "منفذ النظام",
                            EmployeeEnglishName = "Maker",
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhoneNumber = "",
                            SubDepartmentId = 2,
                            TypeOfJobId = 1,
                            tbl_JobId = 1
                        },
                        new
                        {
                            EmployeeId = 3,
                            Address = "",
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ApproveStatusId = 2,
                            BranchId = 1,
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            EmployeeArabicName = "مصرح النظام",
                            EmployeeEnglishName = "Checher",
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhoneNumber = "",
                            SubDepartmentId = 3,
                            TypeOfJobId = 1,
                            tbl_JobId = 1
                        });
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_Entities", b =>
                {
                    b.Property<int>("EntitieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntitieId"));

                    b.Property<int>("ApproveBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApproveStatusId")
                        .HasColumnType("int");

                    b.Property<int>("CreationBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntitieArabicName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EntitieEnglishName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("IsDeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastUpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EntitieId");

                    b.HasIndex("ApproveStatusId");

                    b.ToTable("tbl_Entities", "MainDetails");
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_Job", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobId"));

                    b.Property<int>("ApproveBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApproveStatusId")
                        .HasColumnType("int");

                    b.Property<int>("CreationBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("IsDeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("JobArabicName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("JobEnglishName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("LastUpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("JobId");

                    b.HasIndex("ApproveStatusId");

                    b.ToTable("tbl_Job", "MainDetails");

                    b.HasData(
                        new
                        {
                            JobId = 1,
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ApproveStatusId = 2,
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobArabicName = "مهندس تقني",
                            JobEnglishName = "Technical Engineer"
                        });
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_LoginStyle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApproveBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreationBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("IsDeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsMultiImage")
                        .HasColumnType("bit");

                    b.Property<int?>("LastUpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LoginBackground")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("LoginColor")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("LoginPath")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("StyleNameArabic")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("StyleNameEnglish")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("TextColor")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("TextFont")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TimeInterval")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tbl_LoginStyle", "Login");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsMultiImage = false,
                            LoginBackground = "white",
                            LoginColor = "black",
                            LoginPath = "/LoginStyle/style1",
                            StyleNameArabic = "النمط الاول",
                            StyleNameEnglish = "Style1",
                            TextColor = "White",
                            TextFont = "cursive",
                            TimeInterval = 10
                        },
                        new
                        {
                            Id = 2,
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsMultiImage = false,
                            LoginBackground = "white",
                            LoginColor = "White",
                            LoginPath = "/LoginStyle/style2",
                            StyleNameArabic = "النمط الثاني",
                            StyleNameEnglish = "Style2",
                            TextColor = "black",
                            TextFont = "cursive",
                            TimeInterval = 10
                        },
                        new
                        {
                            Id = 3,
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsMultiImage = true,
                            LoginBackground = "white",
                            LoginColor = "White",
                            LoginPath = "/LoginStyle/style3",
                            StyleNameArabic = "النمط الثالث",
                            StyleNameEnglish = "Style3",
                            TextColor = "black",
                            TextFont = "cursive",
                            TimeInterval = 10
                        });
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_LoginStyleImages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApproveBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreationBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("IsDeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastUpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("tbl_LoginStyleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("tbl_LoginStyleId");

                    b.ToTable("tbl_LoginStyleImages", "Login");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImagePath = "/img1 style 3.jpg",
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            tbl_LoginStyleId = 3
                        });
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_Mailer", b =>
                {
                    b.Property<int>("MailerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MailerId"));

                    b.Property<int>("ApproveBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApproveStatusId")
                        .HasColumnType("int");

                    b.Property<int>("CreationBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("IsDeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastUpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MailerArabicName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MailerEnglishName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MailerId");

                    b.HasIndex("ApproveStatusId");

                    b.ToTable("tbl_Mailer", "MainDetails");
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_MainStyle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApproveBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreationBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DashboardPath")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DescriptionArabic")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("DescriptionEnglish")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("IsDeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastUpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StyleNameArabic")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("StyleNameEnglish")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("WelcomePageImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbl_MainStyle", "Main");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DashboardPath = "_dashboard",
                            DescriptionArabic = "لوحة التحكم",
                            DescriptionEnglish = "Dashboard",
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StyleNameArabic = "لوحة التحكم 1",
                            StyleNameEnglish = "Dashboard 1",
                            WelcomePageImagePath = "/img/logoo.png"
                        });
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_Pages", b =>
                {
                    b.Property<int>("PageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PageId"));

                    b.Property<int>("ApproveBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreationBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("IsDeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastUpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PageId");

                    b.ToTable("tbl_Pages", "Security");

                    b.HasData(
                        new
                        {
                            PageId = 1,
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "system-configurations",
                            NameAr = "الاعدادات العامة للنظام الخاصة بالشركة ",
                            NameEn = "System Configs"
                        },
                        new
                        {
                            PageId = 2,
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "view-branches",
                            NameAr = "الفروع",
                            NameEn = "Branches "
                        },
                        new
                        {
                            PageId = 3,
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "view-regions",
                            NameAr = "المناطق",
                            NameEn = "Regions "
                        },
                        new
                        {
                            PageId = 4,
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "view-jobs",
                            NameAr = "الوظائف",
                            NameEn = "Jobs"
                        },
                        new
                        {
                            PageId = 5,
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "view-entities",
                            NameAr = "الجهات",
                            NameEn = "Entities"
                        },
                        new
                        {
                            PageId = 6,
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "view-department",
                            NameAr = "الاقسسام الرئيسية",
                            NameEn = "Departments"
                        },
                        new
                        {
                            PageId = 7,
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "view-sub-departments",
                            NameAr = "الاقسسام الفرعية",
                            NameEn = "Sub-Departments"
                        },
                        new
                        {
                            PageId = 8,
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "view-the-importance-of-mail",
                            NameAr = "أهمية البريد",
                            NameEn = "The Importance Of Mail"
                        },
                        new
                        {
                            PageId = 9,
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "view-types-of-mail",
                            NameAr = "نوع البريد",
                            NameEn = "Types Of Mail"
                        },
                        new
                        {
                            PageId = 10,
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "view-manage-permissions",
                            NameAr = "ادارة الصلاحيات",
                            NameEn = "Manage Permissions"
                        },
                        new
                        {
                            PageId = 11,
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "view-employee",
                            NameAr = "بيانات الموظفين",
                            NameEn = "Employee Data"
                        },
                        new
                        {
                            PageId = 12,
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "view-type-of-job",
                            NameAr = "نوع الوظيفة",
                            NameEn = "Types Of Job"
                        },
                        new
                        {
                            PageId = 13,
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "view-mailers",
                            NameAr = "جهات البريد",
                            NameEn = "Mailers"
                        },
                        new
                        {
                            PageId = 14,
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "view-clients",
                            NameAr = "العملاء",
                            NameEn = "Clients "
                        });
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_RolePages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApproveBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreationBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("IsDeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastUpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PageId")
                        .HasColumnType("int");

                    b.Property<int>("SubId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PageId");

                    b.HasIndex("SubId");

                    b.ToTable("tbl_RolePages", "Security");
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_SubDepartment", b =>
                {
                    b.Property<int>("SubDepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubDepartmentId"));

                    b.Property<int>("ApproveBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApproveStatusId")
                        .HasColumnType("int");

                    b.Property<int>("CreationBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("IsDeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastUpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubDepartmentArabicName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubDepartmentEnglishName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SubDepartmentId");

                    b.HasIndex("ApproveStatusId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("tbl_SubDepartment", "MainDetails");

                    b.HasData(
                        new
                        {
                            SubDepartmentId = 1,
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ApproveStatusId = 2,
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubDepartmentArabicName = "EHMشركة",
                            SubDepartmentEnglishName = "EHM"
                        },
                        new
                        {
                            SubDepartmentId = 2,
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ApproveStatusId = 2,
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubDepartmentArabicName = "منفذ النظام",
                            SubDepartmentEnglishName = "Maker"
                        },
                        new
                        {
                            SubDepartmentId = 3,
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ApproveStatusId = 2,
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubDepartmentArabicName = "مصرح النظام",
                            SubDepartmentEnglishName = "Checher"
                        });
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_SubDepartmentRole", b =>
                {
                    b.Property<int>("SubRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubRoleId"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAdd")
                        .HasColumnType("bit");

                    b.Property<bool>("IsChecher")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDetails")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMaker")
                        .HasColumnType("bit");

                    b.Property<bool>("IsView")
                        .HasColumnType("bit");

                    b.Property<int>("PageId")
                        .HasColumnType("int");

                    b.Property<string>("RoleNameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleNameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubDepartmentId")
                        .HasColumnType("int");

                    b.HasKey("SubRoleId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("PageId");

                    b.HasIndex("SubDepartmentId");

                    b.ToTable("tbl_SubDepartmentRole", "Security");

                    b.HasData(
                        new
                        {
                            SubRoleId = 1,
                            DepartmentId = 1,
                            IsAdd = false,
                            IsChecher = false,
                            IsDelete = false,
                            IsDetails = false,
                            IsEdit = false,
                            IsMaker = false,
                            IsView = false,
                            PageId = 1,
                            RoleNameAr = "EHMشركة",
                            RoleNameEn = "AdminEHM",
                            SubDepartmentId = 1
                        },
                        new
                        {
                            SubRoleId = 2,
                            DepartmentId = 2,
                            IsAdd = true,
                            IsChecher = false,
                            IsDelete = true,
                            IsDetails = true,
                            IsEdit = true,
                            IsMaker = true,
                            IsView = true,
                            PageId = 2,
                            RoleNameAr = "",
                            RoleNameEn = "",
                            SubDepartmentId = 2
                        },
                        new
                        {
                            SubRoleId = 3,
                            DepartmentId = 2,
                            IsAdd = false,
                            IsChecher = true,
                            IsDelete = false,
                            IsDetails = true,
                            IsEdit = false,
                            IsMaker = false,
                            IsView = true,
                            PageId = 2,
                            RoleNameAr = "",
                            RoleNameEn = "",
                            SubDepartmentId = 3
                        },
                        new
                        {
                            SubRoleId = 4,
                            DepartmentId = 2,
                            IsAdd = true,
                            IsChecher = false,
                            IsDelete = true,
                            IsDetails = true,
                            IsEdit = true,
                            IsMaker = true,
                            IsView = true,
                            PageId = 3,
                            RoleNameAr = "",
                            RoleNameEn = "",
                            SubDepartmentId = 2
                        },
                        new
                        {
                            SubRoleId = 5,
                            DepartmentId = 2,
                            IsAdd = false,
                            IsChecher = true,
                            IsDelete = false,
                            IsDetails = true,
                            IsEdit = false,
                            IsMaker = false,
                            IsView = true,
                            PageId = 3,
                            RoleNameAr = "",
                            RoleNameEn = "",
                            SubDepartmentId = 3
                        },
                        new
                        {
                            SubRoleId = 6,
                            DepartmentId = 2,
                            IsAdd = true,
                            IsChecher = false,
                            IsDelete = true,
                            IsDetails = true,
                            IsEdit = true,
                            IsMaker = true,
                            IsView = true,
                            PageId = 4,
                            RoleNameAr = "",
                            RoleNameEn = "",
                            SubDepartmentId = 2
                        },
                        new
                        {
                            SubRoleId = 7,
                            DepartmentId = 2,
                            IsAdd = false,
                            IsChecher = true,
                            IsDelete = false,
                            IsDetails = true,
                            IsEdit = false,
                            IsMaker = false,
                            IsView = true,
                            PageId = 4,
                            RoleNameAr = "",
                            RoleNameEn = "",
                            SubDepartmentId = 3
                        },
                        new
                        {
                            SubRoleId = 8,
                            DepartmentId = 2,
                            IsAdd = true,
                            IsChecher = false,
                            IsDelete = true,
                            IsDetails = true,
                            IsEdit = true,
                            IsMaker = true,
                            IsView = true,
                            PageId = 5,
                            RoleNameAr = "",
                            RoleNameEn = "",
                            SubDepartmentId = 2
                        },
                        new
                        {
                            SubRoleId = 9,
                            DepartmentId = 2,
                            IsAdd = false,
                            IsChecher = true,
                            IsDelete = false,
                            IsDetails = true,
                            IsEdit = false,
                            IsMaker = false,
                            IsView = true,
                            PageId = 5,
                            RoleNameAr = "",
                            RoleNameEn = "",
                            SubDepartmentId = 3
                        },
                        new
                        {
                            SubRoleId = 10,
                            DepartmentId = 2,
                            IsAdd = true,
                            IsChecher = false,
                            IsDelete = true,
                            IsDetails = true,
                            IsEdit = true,
                            IsMaker = true,
                            IsView = true,
                            PageId = 6,
                            RoleNameAr = "",
                            RoleNameEn = "",
                            SubDepartmentId = 2
                        },
                        new
                        {
                            SubRoleId = 11,
                            DepartmentId = 2,
                            IsAdd = false,
                            IsChecher = true,
                            IsDelete = false,
                            IsDetails = true,
                            IsEdit = false,
                            IsMaker = false,
                            IsView = true,
                            PageId = 6,
                            RoleNameAr = "",
                            RoleNameEn = "",
                            SubDepartmentId = 3
                        },
                        new
                        {
                            SubRoleId = 12,
                            DepartmentId = 2,
                            IsAdd = true,
                            IsChecher = false,
                            IsDelete = true,
                            IsDetails = true,
                            IsEdit = true,
                            IsMaker = true,
                            IsView = true,
                            PageId = 7,
                            RoleNameAr = "",
                            RoleNameEn = "",
                            SubDepartmentId = 2
                        },
                        new
                        {
                            SubRoleId = 13,
                            DepartmentId = 2,
                            IsAdd = false,
                            IsChecher = true,
                            IsDelete = false,
                            IsDetails = true,
                            IsEdit = false,
                            IsMaker = false,
                            IsView = true,
                            PageId = 7,
                            RoleNameAr = "",
                            RoleNameEn = "",
                            SubDepartmentId = 3
                        },
                        new
                        {
                            SubRoleId = 14,
                            DepartmentId = 2,
                            IsAdd = true,
                            IsChecher = false,
                            IsDelete = true,
                            IsDetails = true,
                            IsEdit = true,
                            IsMaker = true,
                            IsView = true,
                            PageId = 8,
                            RoleNameAr = "",
                            RoleNameEn = "",
                            SubDepartmentId = 2
                        },
                        new
                        {
                            SubRoleId = 15,
                            DepartmentId = 2,
                            IsAdd = false,
                            IsChecher = true,
                            IsDelete = false,
                            IsDetails = true,
                            IsEdit = false,
                            IsMaker = false,
                            IsView = true,
                            PageId = 8,
                            RoleNameAr = "",
                            RoleNameEn = "",
                            SubDepartmentId = 3
                        },
                        new
                        {
                            SubRoleId = 16,
                            DepartmentId = 2,
                            IsAdd = true,
                            IsChecher = false,
                            IsDelete = true,
                            IsDetails = true,
                            IsEdit = true,
                            IsMaker = true,
                            IsView = true,
                            PageId = 9,
                            RoleNameAr = "",
                            RoleNameEn = "",
                            SubDepartmentId = 2
                        },
                        new
                        {
                            SubRoleId = 17,
                            DepartmentId = 2,
                            IsAdd = false,
                            IsChecher = true,
                            IsDelete = false,
                            IsDetails = true,
                            IsEdit = false,
                            IsMaker = false,
                            IsView = true,
                            PageId = 9,
                            RoleNameAr = "",
                            RoleNameEn = "",
                            SubDepartmentId = 3
                        },
                        new
                        {
                            SubRoleId = 18,
                            DepartmentId = 2,
                            IsAdd = true,
                            IsChecher = false,
                            IsDelete = true,
                            IsDetails = true,
                            IsEdit = true,
                            IsMaker = true,
                            IsView = true,
                            PageId = 10,
                            RoleNameAr = "",
                            RoleNameEn = "",
                            SubDepartmentId = 2
                        },
                        new
                        {
                            SubRoleId = 19,
                            DepartmentId = 2,
                            IsAdd = false,
                            IsChecher = true,
                            IsDelete = false,
                            IsDetails = true,
                            IsEdit = false,
                            IsMaker = false,
                            IsView = true,
                            PageId = 10,
                            RoleNameAr = "",
                            RoleNameEn = "",
                            SubDepartmentId = 3
                        },
                        new
                        {
                            SubRoleId = 20,
                            DepartmentId = 2,
                            IsAdd = true,
                            IsChecher = false,
                            IsDelete = true,
                            IsDetails = true,
                            IsEdit = true,
                            IsMaker = true,
                            IsView = true,
                            PageId = 11,
                            RoleNameAr = "",
                            RoleNameEn = "",
                            SubDepartmentId = 2
                        },
                        new
                        {
                            SubRoleId = 21,
                            DepartmentId = 2,
                            IsAdd = false,
                            IsChecher = true,
                            IsDelete = false,
                            IsDetails = true,
                            IsEdit = false,
                            IsMaker = false,
                            IsView = true,
                            PageId = 11,
                            RoleNameAr = "",
                            RoleNameEn = "",
                            SubDepartmentId = 3
                        },
                        new
                        {
                            SubRoleId = 22,
                            DepartmentId = 2,
                            IsAdd = true,
                            IsChecher = false,
                            IsDelete = true,
                            IsDetails = true,
                            IsEdit = true,
                            IsMaker = true,
                            IsView = true,
                            PageId = 12,
                            RoleNameAr = "",
                            RoleNameEn = "",
                            SubDepartmentId = 2
                        },
                        new
                        {
                            SubRoleId = 23,
                            DepartmentId = 2,
                            IsAdd = false,
                            IsChecher = true,
                            IsDelete = false,
                            IsDetails = true,
                            IsEdit = false,
                            IsMaker = false,
                            IsView = true,
                            PageId = 12,
                            RoleNameAr = "",
                            RoleNameEn = "",
                            SubDepartmentId = 3
                        },
                        new
                        {
                            SubRoleId = 24,
                            DepartmentId = 2,
                            IsAdd = true,
                            IsChecher = false,
                            IsDelete = true,
                            IsDetails = true,
                            IsEdit = true,
                            IsMaker = true,
                            IsView = true,
                            PageId = 13,
                            RoleNameAr = "",
                            RoleNameEn = "",
                            SubDepartmentId = 2
                        },
                        new
                        {
                            SubRoleId = 25,
                            DepartmentId = 2,
                            IsAdd = false,
                            IsChecher = true,
                            IsDelete = false,
                            IsDetails = true,
                            IsEdit = false,
                            IsMaker = false,
                            IsView = true,
                            PageId = 13,
                            RoleNameAr = "",
                            RoleNameEn = "",
                            SubDepartmentId = 3
                        });
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_SystemConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActiveDirectoryDomain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ActiveDirectoryEnable")
                        .HasColumnType("bit");

                    b.Property<string>("ActiveDirectoryIbmLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ActiveDirectoryIsAttachment")
                        .HasMaxLength(75)
                        .HasColumnType("bit");

                    b.Property<bool>("ActiveDirectoryIsIbmAttachment")
                        .HasColumnType("bit");

                    b.Property<bool>("ActiveDirectoryIsSendMail")
                        .HasColumnType("bit");

                    b.Property<string>("ActiveDirectoryPassword")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("ActiveDirectoryUserName")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<int>("ApproveBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("BankBranchNumber")
                        .HasColumnType("int");

                    b.Property<string>("BankImagePath")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("BankLogoPath")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)");

                    b.Property<string>("BankNameArabic")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("BankNameEnglish")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<int>("CreationBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EnableMultiLanguage")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableOTP")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("IsDeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastUpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberOfMaxCreateUser")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfMaxUserLoginAtTime")
                        .HasColumnType("int");

                    b.Property<string>("WelcomeScreenImage")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("WelcomeScreenTextArabic")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("WelcomeScreenTextEnglish")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("WelcomeScreenTimeInterval")
                        .HasColumnType("int");

                    b.Property<int>("tbl_LoginStyleId")
                        .HasColumnType("int");

                    b.Property<int>("tbl_MainStyleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("tbl_LoginStyleId")
                        .IsUnique();

                    b.HasIndex("tbl_MainStyleId")
                        .IsUnique();

                    b.ToTable("tbl_SystemConfig", "System");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveDirectoryDomain = "Active",
                            ActiveDirectoryEnable = true,
                            ActiveDirectoryIbmLink = "Active",
                            ActiveDirectoryIsAttachment = true,
                            ActiveDirectoryIsIbmAttachment = true,
                            ActiveDirectoryIsSendMail = true,
                            ActiveDirectoryPassword = "123",
                            ActiveDirectoryUserName = "Active@gmail.com",
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BankBranchNumber = 1,
                            BankImagePath = "/img/BankImage.jpg",
                            BankLogoPath = "/img/Banklogo.jpg",
                            BankNameArabic = "بنك مصر",
                            BankNameEnglish = "bank misr",
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EnableMultiLanguage = true,
                            EnableOTP = true,
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfMaxCreateUser = 1,
                            NumberOfMaxUserLoginAtTime = 1,
                            WelcomeScreenImage = "/img/logoo.jpg",
                            WelcomeScreenTextArabic = "مرحبا",
                            WelcomeScreenTextEnglish = "Welcome",
                            WelcomeScreenTimeInterval = 10,
                            tbl_LoginStyleId = 3,
                            tbl_MainStyleId = 1
                        });
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_TheImportanceOfMail", b =>
                {
                    b.Property<int>("TheImportanceOfMailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TheImportanceOfMailId"));

                    b.Property<int>("ApproveBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApproveStatusId")
                        .HasColumnType("int");

                    b.Property<int>("CreationBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("IsDeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastUpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TheImportanceOfMailArabicName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TheImportanceOfMailEnglishName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TheImportanceOfMailId");

                    b.HasIndex("ApproveStatusId");

                    b.ToTable("tbl_TheImportanceOfMail", "MainDetails");
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_TypeOfJob", b =>
                {
                    b.Property<int>("TypeOfJobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeOfJobId"));

                    b.Property<int>("ApproveBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApproveStatusId")
                        .HasColumnType("int");

                    b.Property<int>("CreationBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("IsDeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastUpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeOfJobId");

                    b.HasIndex("ApproveStatusId");

                    b.ToTable("tbl_TypeOfJob", "MainDetails");

                    b.HasData(
                        new
                        {
                            TypeOfJobId = 1,
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ApproveStatusId = 2,
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NameAr = "مهندس",
                            NameEn = "Engineer"
                        });
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_TypeOfMail", b =>
                {
                    b.Property<int>("TypeOfMailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeOfMailId"));

                    b.Property<int>("ApproveBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreationBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("IsDeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastUpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TypeOfMailArabicName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TypeOfMailEnglishName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("tbl_TypeMail")
                        .HasColumnType("int");

                    b.HasKey("TypeOfMailId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("tbl_TypeOfMail", "MainDetails");
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_UserPages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApproveBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreationBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("IsDeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastUpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PageId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PageId");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_UserPages", "Security");
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAdd")
                        .HasColumnType("bit");

                    b.Property<bool>("IsChecher")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDetails")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMaker")
                        .HasColumnType("bit");

                    b.Property<bool>("IsView")
                        .HasColumnType("bit");

                    b.Property<int>("PageId")
                        .HasColumnType("int");

                    b.Property<int?>("SubDepartmentId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("tbl_SubDepartmentRoleSubRoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PageId");

                    b.HasIndex("SubDepartmentId");

                    b.HasIndex("UserId");

                    b.HasIndex("tbl_SubDepartmentRoleSubRoleId");

                    b.ToTable("tbl_UserRole", "Security");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 1,
                            EmployeeId = 1,
                            IsAdd = true,
                            IsChecher = false,
                            IsDelete = true,
                            IsDetails = true,
                            IsEdit = true,
                            IsMaker = true,
                            IsView = true,
                            PageId = 1,
                            SubDepartmentId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 2,
                            EmployeeId = 2,
                            IsAdd = true,
                            IsChecher = false,
                            IsDelete = true,
                            IsDetails = true,
                            IsEdit = true,
                            IsMaker = true,
                            IsView = true,
                            PageId = 2,
                            SubDepartmentId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            DepartmentId = 2,
                            EmployeeId = 3,
                            IsAdd = false,
                            IsChecher = true,
                            IsDelete = false,
                            IsDetails = true,
                            IsEdit = false,
                            IsMaker = false,
                            IsView = true,
                            PageId = 2,
                            SubDepartmentId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            DepartmentId = 2,
                            EmployeeId = 2,
                            IsAdd = true,
                            IsChecher = false,
                            IsDelete = true,
                            IsDetails = true,
                            IsEdit = true,
                            IsMaker = true,
                            IsView = true,
                            PageId = 3,
                            SubDepartmentId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            DepartmentId = 2,
                            EmployeeId = 3,
                            IsAdd = false,
                            IsChecher = true,
                            IsDelete = false,
                            IsDetails = true,
                            IsEdit = false,
                            IsMaker = false,
                            IsView = true,
                            PageId = 3,
                            SubDepartmentId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 6,
                            DepartmentId = 2,
                            EmployeeId = 2,
                            IsAdd = true,
                            IsChecher = false,
                            IsDelete = true,
                            IsDetails = true,
                            IsEdit = true,
                            IsMaker = true,
                            IsView = true,
                            PageId = 4,
                            SubDepartmentId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 7,
                            DepartmentId = 2,
                            EmployeeId = 3,
                            IsAdd = false,
                            IsChecher = true,
                            IsDelete = false,
                            IsDetails = true,
                            IsEdit = false,
                            IsMaker = false,
                            IsView = true,
                            PageId = 4,
                            SubDepartmentId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 8,
                            DepartmentId = 2,
                            EmployeeId = 2,
                            IsAdd = true,
                            IsChecher = false,
                            IsDelete = true,
                            IsDetails = true,
                            IsEdit = true,
                            IsMaker = true,
                            IsView = true,
                            PageId = 5,
                            SubDepartmentId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 9,
                            DepartmentId = 2,
                            EmployeeId = 3,
                            IsAdd = false,
                            IsChecher = true,
                            IsDelete = false,
                            IsDetails = true,
                            IsEdit = false,
                            IsMaker = false,
                            IsView = true,
                            PageId = 5,
                            SubDepartmentId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 10,
                            DepartmentId = 2,
                            EmployeeId = 2,
                            IsAdd = true,
                            IsChecher = false,
                            IsDelete = true,
                            IsDetails = true,
                            IsEdit = true,
                            IsMaker = true,
                            IsView = true,
                            PageId = 6,
                            SubDepartmentId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 11,
                            DepartmentId = 2,
                            EmployeeId = 3,
                            IsAdd = false,
                            IsChecher = true,
                            IsDelete = false,
                            IsDetails = true,
                            IsEdit = false,
                            IsMaker = false,
                            IsView = true,
                            PageId = 6,
                            SubDepartmentId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 12,
                            DepartmentId = 2,
                            EmployeeId = 2,
                            IsAdd = true,
                            IsChecher = false,
                            IsDelete = true,
                            IsDetails = true,
                            IsEdit = true,
                            IsMaker = true,
                            IsView = true,
                            PageId = 7,
                            SubDepartmentId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 13,
                            DepartmentId = 2,
                            EmployeeId = 3,
                            IsAdd = false,
                            IsChecher = true,
                            IsDelete = false,
                            IsDetails = true,
                            IsEdit = false,
                            IsMaker = false,
                            IsView = true,
                            PageId = 7,
                            SubDepartmentId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 14,
                            DepartmentId = 2,
                            EmployeeId = 2,
                            IsAdd = true,
                            IsChecher = false,
                            IsDelete = true,
                            IsDetails = true,
                            IsEdit = true,
                            IsMaker = true,
                            IsView = true,
                            PageId = 8,
                            SubDepartmentId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 15,
                            DepartmentId = 2,
                            EmployeeId = 3,
                            IsAdd = false,
                            IsChecher = true,
                            IsDelete = false,
                            IsDetails = true,
                            IsEdit = false,
                            IsMaker = false,
                            IsView = true,
                            PageId = 8,
                            SubDepartmentId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 16,
                            DepartmentId = 2,
                            EmployeeId = 2,
                            IsAdd = true,
                            IsChecher = false,
                            IsDelete = true,
                            IsDetails = true,
                            IsEdit = true,
                            IsMaker = true,
                            IsView = true,
                            PageId = 9,
                            SubDepartmentId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 17,
                            DepartmentId = 2,
                            EmployeeId = 3,
                            IsAdd = false,
                            IsChecher = true,
                            IsDelete = false,
                            IsDetails = true,
                            IsEdit = false,
                            IsMaker = false,
                            IsView = true,
                            PageId = 9,
                            SubDepartmentId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 18,
                            DepartmentId = 2,
                            EmployeeId = 2,
                            IsAdd = true,
                            IsChecher = false,
                            IsDelete = true,
                            IsDetails = true,
                            IsEdit = true,
                            IsMaker = true,
                            IsView = true,
                            PageId = 10,
                            SubDepartmentId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 19,
                            DepartmentId = 2,
                            EmployeeId = 3,
                            IsAdd = false,
                            IsChecher = true,
                            IsDelete = false,
                            IsDetails = true,
                            IsEdit = false,
                            IsMaker = false,
                            IsView = true,
                            PageId = 10,
                            SubDepartmentId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 20,
                            DepartmentId = 2,
                            EmployeeId = 2,
                            IsAdd = true,
                            IsChecher = false,
                            IsDelete = true,
                            IsDetails = true,
                            IsEdit = true,
                            IsMaker = true,
                            IsView = true,
                            PageId = 11,
                            SubDepartmentId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 21,
                            DepartmentId = 2,
                            EmployeeId = 3,
                            IsAdd = false,
                            IsChecher = true,
                            IsDelete = false,
                            IsDetails = true,
                            IsEdit = false,
                            IsMaker = false,
                            IsView = true,
                            PageId = 11,
                            SubDepartmentId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 22,
                            DepartmentId = 2,
                            EmployeeId = 2,
                            IsAdd = true,
                            IsChecher = false,
                            IsDelete = true,
                            IsDetails = true,
                            IsEdit = true,
                            IsMaker = true,
                            IsView = true,
                            PageId = 12,
                            SubDepartmentId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 23,
                            DepartmentId = 2,
                            EmployeeId = 3,
                            IsAdd = false,
                            IsChecher = true,
                            IsDelete = false,
                            IsDetails = true,
                            IsEdit = false,
                            IsMaker = false,
                            IsView = true,
                            PageId = 12,
                            SubDepartmentId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 24,
                            DepartmentId = 2,
                            EmployeeId = 2,
                            IsAdd = true,
                            IsChecher = false,
                            IsDelete = true,
                            IsDetails = true,
                            IsEdit = true,
                            IsMaker = true,
                            IsView = true,
                            PageId = 13,
                            SubDepartmentId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 25,
                            DepartmentId = 2,
                            EmployeeId = 3,
                            IsAdd = false,
                            IsChecher = true,
                            IsDelete = false,
                            IsDetails = true,
                            IsEdit = false,
                            IsMaker = false,
                            IsView = true,
                            PageId = 13,
                            SubDepartmentId = 3,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int>("ApproveBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreationBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("IsDeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("IsDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastUpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UserEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UserStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("tbl_Users", "Security");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "",
                            EmployeeId = 1,
                            IsActive = false,
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastLoginDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "P@ssword123",
                            UserEndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "AdminEHM",
                            UserStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = 2,
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "",
                            EmployeeId = 2,
                            IsActive = false,
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastLoginDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "P@ssword123",
                            UserEndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "Maker",
                            UserStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = 3,
                            ApproveBy = 0,
                            ApproveDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationBy = 0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "",
                            EmployeeId = 3,
                            IsActive = false,
                            IsDelete = false,
                            IsDeleteBy = 0,
                            IsDeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastLoginDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "P@ssword123",
                            UserEndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "Checher",
                            UserStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_Areas", b =>
                {
                    b.HasOne("LegelProNewVersion.Models.tbl_ApproveStatus", "tbl_ApproveStatus")
                        .WithMany()
                        .HasForeignKey("ApproveStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tbl_ApproveStatus");
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_Branch", b =>
                {
                    b.HasOne("LegelProNewVersion.Models.tbl_ApproveStatus", "tbl_ApproveStatus")
                        .WithMany()
                        .HasForeignKey("ApproveStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LegelProNewVersion.Models.tbl_Areas", "tbl_Areas")
                        .WithMany()
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tbl_ApproveStatus");

                    b.Navigation("tbl_Areas");
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_Client", b =>
                {
                    b.HasOne("LegelProNewVersion.Models.tbl_Bank", "tbl_Bank")
                        .WithMany()
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LegelProNewVersion.Models.tbl_Branch", "tbl_Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tbl_Bank");

                    b.Navigation("tbl_Branch");
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_Department", b =>
                {
                    b.HasOne("LegelProNewVersion.Models.tbl_ApproveStatus", "tbl_ApproveStatus")
                        .WithMany()
                        .HasForeignKey("ApproveStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LegelProNewVersion.Models.tbl_Branch", "tbl_Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tbl_ApproveStatus");

                    b.Navigation("tbl_Branch");
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_Employee", b =>
                {
                    b.HasOne("LegelProNewVersion.Models.tbl_ApproveStatus", "tbl_ApproveStatus")
                        .WithMany()
                        .HasForeignKey("ApproveStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LegelProNewVersion.Models.tbl_Branch", "tbl_Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LegelProNewVersion.Models.tbl_Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LegelProNewVersion.Models.tbl_SubDepartment", "SubDepartment")
                        .WithMany()
                        .HasForeignKey("SubDepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LegelProNewVersion.Models.tbl_TypeOfJob", "tbl_TypeOfJobs")
                        .WithMany()
                        .HasForeignKey("TypeOfJobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LegelProNewVersion.Models.tbl_Job", "tbl_Jobs")
                        .WithMany()
                        .HasForeignKey("tbl_JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("SubDepartment");

                    b.Navigation("tbl_ApproveStatus");

                    b.Navigation("tbl_Branch");

                    b.Navigation("tbl_Jobs");

                    b.Navigation("tbl_TypeOfJobs");
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_Entities", b =>
                {
                    b.HasOne("LegelProNewVersion.Models.tbl_ApproveStatus", "tbl_ApproveStatus")
                        .WithMany()
                        .HasForeignKey("ApproveStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tbl_ApproveStatus");
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_Job", b =>
                {
                    b.HasOne("LegelProNewVersion.Models.tbl_ApproveStatus", "tbl_ApproveStatus")
                        .WithMany()
                        .HasForeignKey("ApproveStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tbl_ApproveStatus");
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_LoginStyleImages", b =>
                {
                    b.HasOne("LegelProNewVersion.Models.tbl_LoginStyle", "tbl_LoginStyle")
                        .WithMany("tbl_LoginStyleImages")
                        .HasForeignKey("tbl_LoginStyleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tbl_LoginStyle");
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_Mailer", b =>
                {
                    b.HasOne("LegelProNewVersion.Models.tbl_ApproveStatus", "tbl_ApproveStatus")
                        .WithMany()
                        .HasForeignKey("ApproveStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tbl_ApproveStatus");
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_RolePages", b =>
                {
                    b.HasOne("LegelProNewVersion.Models.tbl_Pages", "tbl_Pages")
                        .WithMany("rolePages")
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LegelProNewVersion.Models.tbl_SubDepartmentRole", "subDepartmentRole")
                        .WithMany("RolePages")
                        .HasForeignKey("SubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("subDepartmentRole");

                    b.Navigation("tbl_Pages");
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_SubDepartment", b =>
                {
                    b.HasOne("LegelProNewVersion.Models.tbl_ApproveStatus", "tbl_ApproveStatus")
                        .WithMany()
                        .HasForeignKey("ApproveStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LegelProNewVersion.Models.tbl_Department", "tbl_Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tbl_ApproveStatus");

                    b.Navigation("tbl_Department");
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_SubDepartmentRole", b =>
                {
                    b.HasOne("LegelProNewVersion.Models.tbl_Department", "tbl_Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LegelProNewVersion.Models.tbl_Pages", "tbl_Pages")
                        .WithMany()
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LegelProNewVersion.Models.tbl_SubDepartment", "SubDepartment")
                        .WithMany()
                        .HasForeignKey("SubDepartmentId");

                    b.Navigation("SubDepartment");

                    b.Navigation("tbl_Department");

                    b.Navigation("tbl_Pages");
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_SystemConfig", b =>
                {
                    b.HasOne("LegelProNewVersion.Models.tbl_LoginStyle", "tbl_LoginStyle")
                        .WithOne("tbl_SystemConfig")
                        .HasForeignKey("LegelProNewVersion.Models.tbl_SystemConfig", "tbl_LoginStyleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LegelProNewVersion.Models.tbl_MainStyle", "tbl_MainStyle")
                        .WithOne("tbl_SystemConfig")
                        .HasForeignKey("LegelProNewVersion.Models.tbl_SystemConfig", "tbl_MainStyleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tbl_LoginStyle");

                    b.Navigation("tbl_MainStyle");
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_TheImportanceOfMail", b =>
                {
                    b.HasOne("LegelProNewVersion.Models.tbl_ApproveStatus", "tbl_ApproveStatus")
                        .WithMany()
                        .HasForeignKey("ApproveStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tbl_ApproveStatus");
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_TypeOfJob", b =>
                {
                    b.HasOne("LegelProNewVersion.Models.tbl_ApproveStatus", "tbl_ApproveStatus")
                        .WithMany()
                        .HasForeignKey("ApproveStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tbl_ApproveStatus");
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_TypeOfMail", b =>
                {
                    b.HasOne("LegelProNewVersion.Models.tbl_Department", "tbl_Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tbl_Department");
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_UserPages", b =>
                {
                    b.HasOne("LegelProNewVersion.Models.tbl_Pages", "tbl_Pages")
                        .WithMany("userPages")
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LegelProNewVersion.Models.tbl_Users", "Users")
                        .WithMany("tbl_UserPages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");

                    b.Navigation("tbl_Pages");
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_UserRole", b =>
                {
                    b.HasOne("LegelProNewVersion.Models.tbl_Department", "tbl_Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LegelProNewVersion.Models.tbl_Employee", "tbl_Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LegelProNewVersion.Models.tbl_Pages", "tbl_Pages")
                        .WithMany()
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LegelProNewVersion.Models.tbl_SubDepartment", "SubDepartment")
                        .WithMany()
                        .HasForeignKey("SubDepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LegelProNewVersion.Models.tbl_Users", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LegelProNewVersion.Models.tbl_SubDepartmentRole", null)
                        .WithMany("UserRoles")
                        .HasForeignKey("tbl_SubDepartmentRoleSubRoleId");

                    b.Navigation("SubDepartment");

                    b.Navigation("User");

                    b.Navigation("tbl_Department");

                    b.Navigation("tbl_Employee");

                    b.Navigation("tbl_Pages");
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_Users", b =>
                {
                    b.HasOne("LegelProNewVersion.Models.tbl_Employee", "tbl_Employee")
                        .WithMany("tbl_Users")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("tbl_Employee");
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_Employee", b =>
                {
                    b.Navigation("tbl_Users");
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_LoginStyle", b =>
                {
                    b.Navigation("tbl_LoginStyleImages");

                    b.Navigation("tbl_SystemConfig")
                        .IsRequired();
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_MainStyle", b =>
                {
                    b.Navigation("tbl_SystemConfig")
                        .IsRequired();
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_Pages", b =>
                {
                    b.Navigation("rolePages");

                    b.Navigation("userPages");
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_SubDepartmentRole", b =>
                {
                    b.Navigation("RolePages");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("LegelProNewVersion.Models.tbl_Users", b =>
                {
                    b.Navigation("UserRoles");

                    b.Navigation("tbl_UserPages");
                });
#pragma warning restore 612, 618
        }
    }
}
